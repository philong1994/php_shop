											
function SolarAndLunar(date)
{
	var date;
	this.date 	= date;
	this.giohoangdao		= {
		1	: [1,2,4,7,9,10],
		2	: [3,4,6,9,11,12],
		3	: [1,2,5,6,8,11],
		4	: [1,3,4,7,8,10],
		5	: [3,5,6,9,10,12],
		6	: [2,5,7,8,11,12],
		7	: [1,2,4,7,9,10],
		8	: [3,4,6,9,11,12],
		9	: [1,2,5,6,8,11],
		10	: [1,3,4,7,8,10],
		11	: [3,5,6,9,10,12],
		12	: [2,5,7,8,11,12],
	};
	this.ngayhoangdao		= {
		1	: [{
				'hoangdao'	: [1,2,6,8],
				'hacdao'	: [4,7,10,12],
			}],
		2	: [{
				'hoangdao'	: [3,4,8,10],
				'hacdao'	: [2,6,9,12],
			}],
		3	: [{
				'hoangdao'	: [5,6,10,12],
				'hacdao'	: [2,4,8,11],
			}],
		4	: [{
				'hoangdao'	: [2,7,8,12],
				'hacdao'	: [1,4,6,10],
			}],
		5	: [{
				'hoangdao'	: [2,4,9,10],
				'hacdao'	: [3,6,8,12],
			}],
		6	: [{
				'hoangdao'	: [4,6,11,12],
				'hacdao'	: [2,5,8,10],
			}],
		7	: [{
				'hoangdao'	: [1,2,6,8],
				'hacdao'	: [4,7,10,12],
			}],
		8	: [{
				'hoangdao'	: [3,4,8,10],
				'hacdao'	: [2,6,9,12],
			}],
		9	: [{
				'hoangdao'	: [5,6,10,12],
				'hacdao'	: [2,4,8,11],
			}],
		10	: [{
				'hoangdao'	: [2,7,8,12],
				'hacdao'	: [1,4,6,10],
			}],
		11	: [{
				'hoangdao'	: [2,4,9,10],
				'hacdao'	: [3,6,8,12],
			}],
		12	: [{
				'hoangdao'	: [4,6,11,12],
				'hacdao'	: [2,5,8,10],
			}],
	};
	this.holidays		= {
		1	: {
				'lunar'	: {
					1	: 'Tết Nguyên Đán',
					15	: 'Tết Nguyên Tiêu',
				},
				'solar'	: {
					6	: 'Tổng tuyển cử bầu Quốc hội đầu tiên của nước Việt Nam dân chủ cộng hòa',
					7	: 'Chiến thắng biên giới Tây Nam chống quân xâm lược',
					9	: 'Ngày truyền thống học sinh, sinh viên Việt nam',
					13	: 'Khởi nghĩa Đô Lương',
					11	: 'Việt Nam gia nhập WTO',
					27	: 'Ký hiệp định Paris',
				},
			},
		2	: {
				'lunar'	: {
				},
				'solar'	: {
					3	: 'Thành lập Đảng cộng sản Việt Nam',
					8	: 'Lãnh tụ Hồ Chí Minh trở về nước trực tiếp lãnh đạo cách mạng Việt Nam',
					27	: 'Ngày thầy thuốc Việt Nam',
					14	: 'Ngày lễ tình yêu',
				},
			},
		3	: {
				'lunar'	: {
					3	: 'Tết Hàn thực',
					10	: 'Giỗ tổ Hùng Vương',
				},
				'solar'	: {
					8	: 'Ngày Quốc tế Phụ nữ',
					11	: 'Khởi nghĩa Ba Tơ',
					18	: 'Chiến thắng quân Trung Quốc xâm lược trên biên giới phía Bắc',
					26	: 'Ngày thành lập Đoàn TNCS Hồ Chí Minh',
				},
			},
		4	: {
				'lunar'	: {
					14	: 'Tết Dân tộc Khmer',
					15	: 'Lễ Phật Đản',
				},
				'solar'	: {
					25	: 'Ngày tổng tuyển cử bầu quốc hội chung của cả nước',
					30	: 'Giải phóng Miền Nam, thống nhất tổ quốc',
				},
			},
		5	: {
				'lunar'	: {
					5	: 'Tết Đoan Ngọ',
				},
				'solar'	: {
					1	: 'Ngày quốc tế lao động',
					7	: 'Chiến thắng Điện Biên Phủ',
					9	: 'Chiến thắng chủ nghĩa Phát xít',
					13	: 'Ngày của Mẹ',
					15	: 'Thành lập Đội TNTP Hồ Chí Minh',
					19	: 'Ngày sinh Chủ tịch Hồ Chí Minh',
				},
			},
		6	: {
				'lunar'	: {
				},
				'solar'	: {
					1	: 'Quốc tế Thiếu nhi',
					5	: 'Nguyễn Tất Thành rời cảng Nhà Rồng ra đi tìm đường cứu nước',
					17	: 'Chiến thắng chủ nghĩa Phát xít',
					13	: 'Ngày của Bố',
					21	: 'Ngày báo chí Việt Nam',
					28	: 'Ngày gia đình Việt Nam',
				},
			},
		7	: {
				'lunar'	: {
					15	: 'Vu Lan',
				},
				'solar'	: {
					2	: 'Nước ta đổi quốc hiệu từ Việt Nam dân chủ cộng hòa thành Cộng hòa XHCN Việt Nam',
					17	: 'Hồ chủ tịch ra lời kêu gọi "Không có gì quý hơn độc lập, tự do"',
					27	: 'Ngày thương binh, liệt sĩ',
					28	: 'Thành lập công đoàn Việt Nam(1929)/Ngày Việt Nam gia nhập Asean(1995)',
				},
			},
		8	: {
				'lunar'	: {
					1	: 'Tết Katê',
					15	: 'Tết Trung Thu',
				},
				'solar'	: {
					1	: 'Ngày truyền thống công tác tư tưởng – văn hoá của Đảng',
					19	: 'Cách mạng tháng 8 (Ngày Công an nhân dân)',
					20	: 'Ngày sinh chủ tịch Tôn Đức Thắng',
				},
			},
		9	: {
				'lunar'	: {
					9	: 'Tết Trùng Cửu',
				},
				'solar'	: {
					2	: 'Quốc khánh (1945)',
					10	: 'Thành lập Mặt trận Tổ quốc Việt Nam',
					12	: 'Xô Viết Nghệ Tĩnh',
					20	: 'Việt Nam trở thành thành viên Liên hiệp quốc',
					23	: 'Nam Bộ kháng chiến',
					27	: 'Khởi nghĩa Bắc Sơn',
				},
			},
		10	: {
				'lunar'	: {
					10	: 'Tết Trùng Thập',
				},
				'solar'	: {
					1	: 'Ngày quốc tế người cao tuổi',
					10	: 'Giải phóng Thủ đô',
					14	: 'Ngày hội Nông dân Việt Nam',
					15	: 'Ngày truyền thống Hội thanh niên Việt Nam',
					20	: 'Thành lập Hội liên hiệp phụ nữ Việt Nam',
				},
			},
		11	: {
				'lunar'	: {
				},
				'solar'	: {
					20	: 'Ngày nhà giáo Việt Nam',
					23	: 'Khởi nghĩa Nam Kỳ - Thành lập Hội chữ thập đỏ Việt Nam',
				},
			},
		12	: {
				'lunar'	: {
					23	: 'Ông Táo chầu trời',
				},
				'solar'	: {
					1	: 'Ngày thế giới phòng chống AIDS',
					19	: 'Toàn quốc kháng chiến',
					22	: 'Thành lập quân đội nhân dân Việt Nam',
				},
			},
	};
	this.thu		= {
		1	: 'Thứ hai',
		2	: 'Thứ ba',
		3	: 'Thứ tư',
		4	: 'Thứ năm',
		5	: 'Thứ sáu',
		6	: 'Thứ bảy',
		7	: 'Chủ nhật',
	};
	this.thien_can	= {
		1	: 'Giáp',
		2	: 'Ất',
		3	: 'Bính',
		4	: 'Đinh',
		5	: 'Mậu',
		6	: 'Kỷ',
		7	: 'Canh',
		8	: 'Tân',
		9	: 'Nhâm',
		10	: 'Quý',
	};
	this.dia_chi	= {
		1	: 'Tý',
		2	: 'Sửu',
		3	: 'Dần',
		4	: 'Mão',
		5	: 'Thìn',
		6	: 'Tỵ',
		7	: 'Ngọ',
		8	: 'Mùi',
		9	: 'Thân',
		10	: 'Dậu',
		11	: 'Tuất',
		12	: 'Hợi',
	};
	this.zodiac_images	= {
		1	: 'Ty',
		2	: 'Suu',
		3	: 'Dan',
		4	: 'Mao',
		5	: 'Thin',
		6	: 'Ti',
		7	: 'Ngo',
		8	: 'Mui',
		9	: 'Than',
		10	: 'Dau',
		11	: 'Tuat',
		12	: 'Hoi',
	};
	this.dia_chi_month	= {
		11	: 'Tý',
		12	: 'Sửu',
		1	: 'Dần',
		2	: 'Mão',
		3	: 'Thìn',
		4	: 'Tỵ',
		5	: 'Ngọ',
		6	: 'Mùi',
		7	: 'Thân',
		8	: 'Dậu',
		9	: 'Tuất',
		10	: 'Hợi',
	};
	this.array_zodiac_hour = {
		1 :  {
			'id'			: 1,
			'name'			: 'mouse',
			'name_vi'		: 'Tý',
			'name_vi_vn'		: 'Chuột',
			'time_begin'		: 23,
			'time_end'		: 1,
			'month'			: 11,
 		},
		2 :  {
			'id'			: 2,
			'name'			: 'buffalo',
			'name_vi'		: 'Sửu',
			'name_vi_vn'		: 'Trâu',
			'time_begin'		: 1,
			'time_end'		: 3,
			'month'			: 12,
		},
		3 :  {
			'id'			: 3,
			'name'			: 'tiger',
			'name_vi'		: 'Dần',
			'name_vi_vn'		: 'Hổ',
			'time_begin'		: 3,
			'time_end'		: 5,
			'month'			: 1,
		},
		4 :  {
			'id'			: 4,
			'name'			: 'cat',
			'name_vi'		: 'Mão',
			'name_vi_vn'		: 'Mèo',
			'time_begin'		: 5,
			'time_end'		: 7,
			'month'			: 2,
		},
		5 :  {
			'id'			: 5,
			'name'			: 'dragon',
			'name_vi'		: 'Thìn',
			'name_vi_vn'		: 'Rồng',
			'time_begin'		: 7,
			'time_end'		: 9,
			'month'			: 3,
		},
		6 :  {
			'id'			: 6,
			'name'			: 'buffalo',
			'name_vi'		: 'Tỵ',
			'name_vi_vn'		: 'Rắn',
			'time_begin'		: 9,
			'time_end'		: 11,
			'month'			: 4,
		},
		7 :  {
			'id'			: 7,
			'name'			: 'horse',
			'name_vi'		: 'Ngọ',
			'name_vi_vn'		: 'Ngựa',
			'time_begin'		: 11,
			'time_end'		: 13,
			'month'			: 5,
		},
		8 :  {
			'id'			: 8,
			'name'			: 'goat',
			'name_vi'		: 'Mùi',
			'name_vi_vn'		: 'Dê',
			'time_begin'		: 13,
			'time_end'		: 15,
			'month'			: 6,
		},
		9 :  {
			'id'			: 9,
			'name'			: 'monkey',
			'name_vi'		: 'Thân',
			'name_vi_vn'		:'Khỉ',
			'time_begin'		: 15,
			'time_end'		: 17,
			'month'			: 7,
		},
		10 :  {
			'id'			: 10,
			'name'			: 'chicken',
			'name_vi'		: 'Dậu',
			'name_vi_vn'		: 'Gà',
			'time_begin'		: 17,
			'time_end'		: 19,
			'month'			: 8,
		},
		11 :  {
			'id'			: 11,
			'name'			: 'dog',
			'name_vi'		: 'Tuất',
			'name_vi_vn'		: 'Chó',
			'time_begin'		: 19,
			'time_end'		: 21,
			'month'			: 9,
		},
		12 :  {
			'id'			: 12,
			'name'			: 'pig',
			'name_vi'		: 'Hợi',
			'name_vi_vn'		: 'Lợn',
			'time_begin'		: 21,
			'time_end'		: 23,
			'month'			: 10,
		},

	};
	this.array_zodiac_hour_get = [
		{
			'id'			: 1,
			'name'			: 'mouse',
			'name_vi'		: 'Tý',
			'name_vi_vn'		: 'Chuột',
			'time_begin'		: 23,
			'time_end'		: 1,
			'month'			: 11,
 		},
		{
			'id'			: 2,
			'name'			: 'buffalo',
			'name_vi'		: 'Sửu',
			'name_vi_vn'		: 'Trâu',
			'time_begin'		: 1,
			'time_end'		: 3,
			'month'			: 12,
		},
		{
			'id'			: 3,
			'name'			: 'tiger',
			'name_vi'		: 'Dần',
			'name_vi_vn'		: 'Hổ',
			'time_begin'		: 3,
			'time_end'		: 5,
			'month'			: 1,
		},
		{
			'id'			: 4,
			'name'			: 'cat',
			'name_vi'		: 'Mão',
			'name_vi_vn'		: 'Mèo',
			'time_begin'		: 5,
			'time_end'		: 7,
			'month'			: 2,
		},
		{
			'id'			: 5,
			'name'			: 'dragon',
			'name_vi'		: 'Thìn',
			'name_vi_vn'		:'Rồng',
			'time_begin'		: 7,
			'time_end'		: 9,
			'month'			: 3,
		},
		{
			'id'			: 6,
			'name'			: 'buffalo',
			'name_vi'		: 'Tỵ',
			'name_vi_vn'		: 'Rắn',
			'time_begin'		: 9,
			'time_end'		: 11,
			'month'			: 4,
		},
		{
			'id'			: 7,
			'name'			: 'horse',
			'name_vi'		: 'Ngọ',
			'name_vi_vn'		: 'Ngựa',
			'time_begin'		: 11,
			'time_end'		: 13,
			'month'			: 5,
		},
		{
			'id'			: 8,
			'name'			: 'goat',
			'name_vi'		: 'Mùi',
			'name_vi_vn'		: 'Dê',
			'time_begin'		: 13,
			'time_end'		: 15,
			'month'			: 6,
		},
		{
			'id'			: 9,
			'name'			: 'monkey',
			'name_vi'		: 'Thân',
			'name_vi_vn'		: 'Khỉ',
			'time_begin'		: 15,
			'time_end'		: 17,
			'month'			: 7,
		},
		{
			'id'			: 10,
			'name'			: 'chicken',
			'name_vi'		: 'Dậu',
			'name_vi_vn'		: 'Gà',
			'time_begin'		: 17,
			'time_end'		: 19,
			'month'			: 8,
		},
		{
			'id'			: 11,
			'name'			: 'dog',
			'name_vi'		: 'Tuất',
			'name_vi_vn'		: 'Chó',
			'time_begin'		: 19,
			'time_end'		: 21,
			'month'			: 9,
		},
		{
			'id'			: 12,
			'name'			: 'pig',
			'name_vi'		: 'Hợi',
			'name_vi_vn'		: 'Lợn',
			'time_begin'		: 21,
			'time_end'		: 23,
			'month'			: 10,
		},
	];
	this.INT = function (d) {
	    	return Math.floor(d);
	};
	this.jdFromDate = function (dd, mm, yy) {
	    	var a = this.INT((14 - mm) / 12);
	    	var y = yy + 4800 - a;
	    	var m = mm + 12 * a - 3;
	    	var jd = dd + this.INT((153 * m + 2) / 5) + 365 * y + this.INT(y / 4) - this.INT(y / 100) + this.INT(y / 400) - 32045;
	    	if (jd < 2299161) {
	        		jd = dd + this.INT((153* m + 2)/5) + 365 * y + this.INT(y / 4) - 32083;
	    	}
	    	return jd;
	};
	this.jdToDate = function (jd) {
	    	if (jd > 2299160) { // After 5/10/1582, Gregorian calendar
		        	var a = jd + 32044;
		        	var b = this.INT((4*a+3)/146097);
		        	var c = a - this.INT((b*146097)/4);
	    	} else {
		        	b = 0;
		        	c = jd + 32082;
	    	}
	    	var d = this.INT((4*c+3)/1461);
	    	var e = c - this.INT((1461*d)/4);
	    	var m = this.INT((5*e+2)/153);
	    	var day = e - this.INT((153*m+2)/5) + 1;
	    	var month = m + 3 - 12*this.INT(m/10);
	    	var year = b*100 + d - 4800 + this.INT(m/10);
	    	//echo "day = day, month = month, year = year\n";
	    	return new Array(day, month, year);
	};
	this.getNewMoonDay = function (k, timeZone) {
	    	var T = k/1236.85; // Time in Julian centuries from 1900 January 0.5
	    	var T2 = T * T;
	    	var T3 = T2 * T;
	   	var dr = Math.PI/180;
	    	var Jd1 = 2415020.75933 + 29.53058868*k + 0.0001178*T2 - 0.000000155*T3;
	    	Jd1 = Jd1 + 0.00033*Math.sin((166.56 + 132.87*T - 0.009173*T2)*dr); // Mean new moon
	    	var M = 359.2242 + 29.10535608*k - 0.0000333*T2 - 0.00000347*T3; // Sun's mean anomaly
	    	var Mpr = 306.0253 + 385.81691806*k + 0.0107306*T2 + 0.00001236*T3; // Moon's mean anomaly
	    	var F =  21.2964 + 390.67050646*k - 0.0016528*T2 - 0.00000239*T3; // Moon's argument of latitude
	    	var C1=(0.1734 - 0.000393*T)*Math.sin(M*dr) + 0.0021*Math.sin(2*dr*M);
	    	C1 = C1 - 0.4068*Math.sin(Mpr*dr) + 0.0161*Math.sin(dr*2*Mpr);
	    	C1 = C1 - 0.0004*Math.sin(dr*3*Mpr);
	    	C1 = C1 + 0.0104*Math.sin(dr*2*F) - 0.0051*Math.sin(dr*(M+Mpr));
	    	C1 = C1 - 0.0074*Math.sin(dr*(M-Mpr)) + 0.0004*Math.sin(dr*(2*F+M));
	    	C1 = C1 - 0.0004*Math.sin(dr*(2*F-M)) - 0.0006*Math.sin(dr*(2*F+Mpr));
	    	C1 = C1 + 0.0010*Math.sin(dr*(2*F-Mpr)) + 0.0005*Math.sin(dr*(2*Mpr+M));
	    	if (T < -11) {
	        		var deltat=  0.001 + 0.000839*T + 0.0002261*T2 - 0.00000845*T3 - 0.000000081*T*T3;
	    	} else {
	        		deltat= -0.000278 + 0.000265*T + 0.000262*T2;
	    	};
	    	var JdNew = Jd1 + C1 - deltat;
	    	return this.INT(JdNew + 0.5 + timeZone/24);
	};
	this.getSunLongitude = function (jdn, timeZone) {
	    	var T = (jdn - 2451545.5 - timeZone/24) / 36525; // Time in Julian centuries from 2000-01-01 12:00:00 GMT
	    	var T2 = T * T;
	    	var dr = Math.PI/180; // degree to radian
	    	var M = 357.52910 + 35999.05030*T - 0.0001559*T2 - 0.00000048*T*T2; // mean anomaly, degree
	    	var L0 = 280.46645 + 36000.76983*T + 0.0003032*T2; // mean longitude, degree
	    	var DL = (1.914600 - 0.004817*T - 0.000014*T2)*Math.sin(dr*M);
	    	DL = DL + (0.019993 - 0.000101*T)*Math.sin(dr*2*M) + 0.000290*Math.sin(dr*3*M);
	    	var L = L0 + DL; // true longitude, degree
	    	var omega =  125.04 - 1934.136 * T;
	    	L = L - 0.00569 - 0.00478 * Math.sin(omega * dr);
	    	L = L*dr;
	    	L = L - Math.PI*2*(this.INT(L/(Math.PI*2))); // Normalize to (0, 2*PI)
	    	return this.INT(L/Math.PI*6);
	};
	this.getLunarMonth11 = function (yy, timeZone) {
	    	var off = this.jdFromDate(31, 12, yy) - 2415021;
	    	var k = this.INT(off / 29.530588853);
	    	var nm = this.getNewMoonDay(k, timeZone);
	    	var sunLong = this.getSunLongitude(nm, timeZone); // sun longitude at local midnight
	    	if (sunLong >= 9) {
	        		nm = this.getNewMoonDay(k-1, timeZone);
	    	}
	    	return nm;
	};
	this.getLeapMonthOffset = function (a11, timeZone) {
	    	var k = this.INT((a11 - 2415021.076998695) / 29.530588853 + 0.5);
	    	var last = 0;
	    	var i = 1; // We start with the month following lunar month 11
	    	var arc = this.getSunLongitude(this.getNewMoonDay(k + i, timeZone), timeZone);
	    	do {
		        	last = arc;
		        	i = i + 1;
		        	arc = this.getSunLongitude(this.getNewMoonDay(k + i, timeZone), timeZone);
	    	} while (arc != last && i < 14);
	    	return i - 1;
	};
	/* Comvert solar date dd/mm/yyyy to the corresponding lunar date */
	this.convertSolar2Lunar = function (timeZone) {
		var arrar_date	= this.date.split('/');
		var dd				= this.INT(arrar_date[0]);
		var mm				= this.INT(arrar_date[1]);
		var yy				= this.INT(arrar_date[2]);

	    	var dayNumber = this.jdFromDate(dd, mm, yy);
	    	var k = this.INT((dayNumber - 2415021.076998695) / 29.530588853);
	    	var monthStart = this.getNewMoonDay(k+1, timeZone);
	    	if (monthStart > dayNumber) {
	        		monthStart = this.getNewMoonDay(k, timeZone);
	    	}
	    	var a11 = this.getLunarMonth11(yy, timeZone);
	    	var b11 = a11;
	    	if (a11 >= monthStart) {
	        		var lunarYear = yy;
	        		a11 = this.getLunarMonth11(yy-1, timeZone);
	    	} else {
	        		lunarYear = yy+1;
	        		b11 = this.getLunarMonth11(yy+1, timeZone);
	    	}
	    	var lunarDay = dayNumber - monthStart + 1;
	    	var diff = this.INT((monthStart - a11)/29);
	    	var lunarLeap = 0;
	    	var lunarMonth = diff + 11;
	   	if (b11 - a11 > 365) {
	        		var leapMonthDiff = this.getLeapMonthOffset(a11, timeZone);
	        		if (diff >= leapMonthDiff) {
	            			lunarMonth = diff + 10;
	            			if (diff == leapMonthDiff) {
	                			lunarLeap = 1;
	            			}
	        		}
	    	}
	    	if (lunarMonth > 12) {
	        		lunarMonth = lunarMonth - 12;
	   	 }
	    	if (lunarMonth >= 11 && diff < 4) {
	        		lunarYear -= 1;
	    	}
	    	return new Array(lunarDay, lunarMonth, lunarYear, lunarLeap);
	};
	/* Convert a lunar date to the corresponding solar date */
	this.convertLunar2Solar = function (lunarDay, lunarMonth, lunarYear, lunarLeap, timeZone) {
	    	if (lunarMonth < 11) {
	        		var a11 = this.getLunarMonth11(lunarYear-1, timeZone);
	        		var b11 = this.getLunarMonth11(lunarYear, timeZone);
	    	} else {
	        		a11 = this.getLunarMonth11(lunarYear, timeZone);
	        		b11 = this.getLunarMonth11(lunarYear+1, timeZone);
	    	}
	    	var k = this.INT( + (a11 - 2415021.076998695) / 29.530588853);
	    	var off = lunarMonth - 11;
	    	if (off < 0) {
	        		off += 12;
	   	 }
	    	if (b11 - a11 > 365) {
	        		var leapOff = this.getLeapMonthOffset(a11, timeZone);
	        		var leapMonth = leapOff - 2;
	        		if (leapMonth < 0) {
	            			leapMonth += 12;
	        		}
	        		if (lunarLeap != 0 && lunarMonth != leapMonth) {
	            			return {0 : 0, 1 : 0, 2 : 0};
	        		} else if (lunarLeap != 0 || off >= leapOff) {
	            			off += 1;
	        		}
	    	}
	    	var monthStart = this.getNewMoonDay(k + off, timeZone);
	    	return this.jdToDate(monthStart + lunarDay - 1);
	};
	this.getCanChi_Year = function (yy)
	{
		var can 		= this.thien_can[(this.INT(yy) + 6) % 10 + 1];
		var chi 		= this.dia_chi[(this.INT(yy) + 8) % 12 + 1];
		return can  + ' ' +  chi;
	};
	this.getCanChi_Month = function (mm, yy)
	{
		var can 		= this.thien_can[(this.INT(yy)*12 + this.INT(mm) + 3) % 10 + 1];
		var chi 		= this.dia_chi_month[this.INT(mm)];// 1-ty, tuy nhien
		return can  + ' ' +  chi;
	};
	this.getCanChi_Date = function (dd, mm, yy)
	{
		var arrar_date	= this.date.split('/');
		dd				= this.INT(arrar_date[0]);
		mm				= this.INT(arrar_date[1]);
		yy				= this.INT(arrar_date[2]);
	    	var dayNumber = this.jdFromDate(dd, mm, yy);
		var can 		= this.thien_can[(this.INT(dayNumber) + 9) % 10 + 1];
		var chi 		= this.dia_chi[(this.INT(dayNumber) + 1) % 12 + 1];
		return can  + ' ' +  chi;
	};
	this.getImage_DateZodiac = function ()
	{
		var arrar_date	= this.date.split('/');
		var dd				= this.INT(arrar_date[0]);
		var mm				= this.INT(arrar_date[1]);
		var yy				= this.INT(arrar_date[2]);
	    	var dayNumber = this.jdFromDate(dd, mm, yy);
		var chi 		= this.zodiac_images[(this.INT(dayNumber) + 1) % 12 + 1];
		return chi;
	};
	this.getCanChi_Thu = function (dd, mm, yy)
	{
		var arrar_date	= this.date.split('/');
		dd				= this.INT(arrar_date[0]);
		mm				= this.INT(arrar_date[1]);
		yy				= this.INT(arrar_date[2]);
	    	var dayNumber = this.jdFromDate(dd, mm, yy);
		var thu 		= this.thu[this.INT(dayNumber) % 7 + 1];
		return thu;
	};
	this.getHour = function (hour){
		var neededObjects = this.array_zodiac_hour_get.filter(function (el) {
		  	return el.time_begin <= hour && el.time_end > hour;
		});
		for (var valueKey in neededObjects) {		
                 		var value = neededObjects[valueKey];
			return value.name_vi;
		}
		return;
	}
	this.getGioHoangDao = function (dd, mm, yy)
	{
		var arrar_date	= this.date.split('/');
		dd				= this.INT(arrar_date[0]);
		mm				= this.INT(arrar_date[1]);
		yy				= this.INT(arrar_date[2]);
	 	var dayNumber 		= this.jdFromDate(dd, mm, yy);
		var array_hour 	= this.giohoangdao[(this.INT(dayNumber) + 1) % 12 + 1];
		var result = {};
		var id = 0;
		for (var key in array_hour) {
       		var value = array_hour[key];
			result[id]	= {
				'name'			: this.array_zodiac_hour[value].name_vi,
				'time_begin'	: this.array_zodiac_hour[value].time_begin,
				'time_end'		: this.array_zodiac_hour[value].time_end,
			};
			id++;
		}
		return result;
	}
	this.checkNgayHoangDao = function (month_lunar)
	{
		var array_date 	= this.ngayhoangdao[(this.INT(month_lunar)) ];
		var arrar_dates	= this.date.split('/');
		var dd				= this.INT(arrar_dates[0]);
		var mm				= this.INT(arrar_dates[1]);
		var yy				= this.INT(arrar_dates[2]);
	    	var dayNumber 		= this.jdFromDate(dd, mm, yy);
		var date_zodiac	= (this.INT(dayNumber) + 1) % 12 + 1;
		if(array_date[0] && array_date[0]['hoangdao'] && array_date[0]['hoangdao'].indexOf(date_zodiac) > -1){
			return 'Ngày hoàng đạo';
		}else{
			if(array_date && array_date[0]['hacdao'] && array_date[0]['hacdao'].indexOf(date_zodiac) > -1){
				return 'Ngày hắc đạo';
			}else{
				return '';
			}
		}
	}
	this.getHoliday = function (dd, mm, yy)
	{
		var arrar_date		= this.date.split('/');
		var dd_solar		= this.INT(arrar_date[0]);
		var mm_solar		= this.INT(arrar_date[1]);
		var yy_solar		= this.INT(arrar_date[2]);
		if((this.holidays[this.INT(mm)]) && (this.holidays[this.INT(mm)]['lunar'][this.INT(dd)])){
			
			return this.holidays[this.INT(mm)]['lunar'][this.INT(dd)];
		}else{
			if((this.holidays[this.INT(mm_solar)]) && (this.holidays[this.INT(mm_solar)]['solar'][this.INT(dd_solar)])){
				
				return this.holidays[this.INT(mm_solar)]['solar'][this.INT(dd_solar)];
			}else{
				return '';
			}
		}
	}
	this.parseCalendar = function (SolarAndLunar, hour){
		var arrar_date		= this.date.split('/');
		var dd				= this.INT(arrar_date[0]);
		var mm				= this.INT(arrar_date[1]);
		var yy				= this.INT(arrar_date[2]);
		var amlich 			= SolarAndLunar.prototype.convertSolar2Lunar(7.0);
		var amlich_date		= amlich[0];
		var amlich_month	= amlich[1];
		var amlich_year		= amlich[2];

		var leap_year 	= false;
		if (amlich_year == 1) leap_year = true;
		var array_Giohoangdao = SolarAndLunar.prototype.getGioHoangDao(amlich_date, amlich_month, amlich_year);
		var getGioHoangDao = '';
		var id = 1;
		var count_Object = Object.keys(array_Giohoangdao).length;
		for (var key in array_Giohoangdao) {
        		var value = array_Giohoangdao[key];
			getGioHoangDao +=  value['name'] + "" + '(' + "" + value['time_begin'] + "" + 'h - ' + "" + value['time_end'] + "" + 'h), ';
			if(id %2 == 0 && id > 0 && id < count_Object){
				getGioHoangDao +=  '<br/>';
			}
			id++;
		}
		getGioHoangDao = getGioHoangDao.substr(0,getGioHoangDao.length-2);
		var prev_Date = new Date(yy,mm-1,dd);
		prev_Date.setDate(prev_Date.getDate()-1);
		var next_Date = new Date(yy,mm-1,dd);
		next_Date.setDate(next_Date.getDate()+1);
		return {
			'date'			: {
				'lunar'		: amlich_date,
				'solar'		: dd,
				'zodiac'	: SolarAndLunar.prototype.getCanChi_Date(amlich_date,amlich_month, amlich_year),
			},
			'month'			: {
				'lunar'		: amlich_month,
				'solar'		: mm,
				'zodiac'	: SolarAndLunar.prototype.getCanChi_Month(amlich_month, amlich_year),
			},
			'year'			: {
				'lunar'		: amlich_year,
				'solar'		: yy,
				'zodiac'	: SolarAndLunar.prototype.getCanChi_Year(amlich_year),
			},
			'day'			: SolarAndLunar.prototype.getCanChi_Thu(amlich_date, amlich_month, amlich_year),
			'hour'			: SolarAndLunar.prototype.getHour(hour),
			'hour_zodiac'	: getGioHoangDao,
			'zodiac'		: SolarAndLunar.prototype.checkNgayHoangDao(amlich_month),	//hoàng đạo-hắc đạo
			'image'			: SolarAndLunar.prototype.getImage_DateZodiac(),
			'leap_year'		: leap_year,
			'current_date'	: this.date,
			'prev_date' 	: prev_Date.getDate()+'/'+(prev_Date.getMonth()+1)+'/'+prev_Date.getFullYear(),
			'next_date' 	: next_Date.getDate()+'/'+(next_Date.getMonth()+1)+'/'+next_Date.getFullYear(),
			'holiday'		: SolarAndLunar.prototype.getHoliday(amlich_date, amlich_month, amlich_year),
		};
	}
};

SolarAndLunar.prototype.thien_can = null;
SolarAndLunar.prototype.dia_chi = null;
SolarAndLunar.prototype.dia_chi_month = null;
SolarAndLunar.prototype.array_zodiac_hour = null;
SolarAndLunar.prototype.array_zodiac_hour_get = null;
SolarAndLunar.prototype.thu = null;
SolarAndLunar.prototype.giohoangdao = null;
SolarAndLunar.prototype.ngayhoangdao = null;
SolarAndLunar.prototype.zodiac_images = null;
SolarAndLunar.prototype.holidays = null;
var today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //January is 0!
var yyyy = today.getFullYear();
document.write('<link href="temp/css/hoangdao.min.css" rel="stylesheet" type="text/css" /><div id="cunghoangdao"></div>');
loadCalendar(today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear());
setInterval('oclock()', 1000);
function loadCalendar(date)
{
	var hour = (new Date()).getHours();
	SolarAndLunar.prototype = new SolarAndLunar(date);
	var result_array = SolarAndLunar.prototype.parseCalendar(SolarAndLunar, hour);
	console.log(result_array);
	date_zodiac = (result_array['holiday'] == '') ? result_array['zodiac'] : result_array['holiday'];
    	if(date_zodiac.trim() == ''){
        		date_zodiac = '<br/>';
    	}
	var result 	= '<div class="hdngay">'+
        		'<div class="ngay_nd1">'+
           			'LỊCH VẠN SỰ THÁNG ' +result_array['month']['solar']+ ' NĂM ' +result_array['year']['solar']+
        		'</div>'+
        		'<div class="ngay_nd2">'+
            			'<form action="" method="post" name="frmLichngay">'+
                			'<input type="hidden" name="date">'+
                			'<span class="prev_date" onclick="frmLichngay.date.value = \'' +result_array['prev_date']+ '\';loadCalendar(\'' +result_array['prev_date']+ '\');" > ‹ </span> </span>'+
                			'<span id="blue"> ' +result_array['date']['solar']+ '</span>'+
                			'<span class="next_date" onclick="frmLichngay.date.value = \'' +result_array['next_date']+ '\';loadCalendar(\'' +result_array['next_date']+ '\');" > › </span> </span>'+
            			'</form>'+
        		'</div>'+
        		'<div class="ngay_nd3">'+
            			'<span style="color: gray;">'+date_zodiac+ '</span>'+
        		'</div>'+
       		'<div class="ngay_nd4">'+
            			'Giờ Hoàng Đạo: ' +result_array['hour_zodiac']+ ''+
        		'</div>'+
        		'<div class="tt_ngay">'+
            			'<table width="100%" border="0" cellspacing="0" cellpadding="0">'+
                			'<tbody>'+
                				'<tr>'+
	                    				'<td class="tt_ngay_1">&nbsp;</td>'+
	                    				'<td class="tt_ngay_2">'+
	                        					'<div class="lvs_thu">'+
	                            						'' +result_array['day']+ ''+
	                       					' </div>'+
	                    				'</td>'+
	                    				'<td class="tt_ngay_3">'+
	                            						'<span style="font-size: 15px" id="oclock"></span>'+
	                    				'</td>'+
	                   				'<td class="tt_ngay_4">'+
	                    					'<div class="lvs_thu">'+
                        						'Tháng ' +result_array['month']['lunar']+ ''+
	                        					'</div>'+
	                    				'</td>'+
	                    				'<td class="tt_ngay_1">&nbsp;</td>'+
	                				'</tr>'+
					               '<tr>'+
					                    	'<td height="1px"></td>'+
					                    	'<td colspan="3" height="1px" class=""></td>'+
					                    	'<td height="1px"></td>'+
					               '</tr>'+
                					'<tr>'+
                    						'<td class="tt_ngay_1">&nbsp;</td>'+
                    						'<td class="tt_ngay_2 kc_tt_ngay">'+
                        							'Giờ ' +result_array['hour']+ ''+
                        							'<br>'+
                        							'Ngày ' +result_array['date']['zodiac']+ ''+
                        							'<br>'+
                        							'Tháng ' +result_array['month']['zodiac']+ ''+
                    						'</td>'+
                    						'<td class="tt_ngay_3">'+
                         							'<div class="image_zodiac zodiac_' +result_array['image']+ '"></div>'+
                    						'</td>'+
                    						'<td class="tt_ngay_4 kc_tt_ngay">'+
                        							'<div class="lvs_am">'+
                           								' ' +result_array['date']['lunar']+ ''+
                        							'</div>'+
                        							'Năm ' +result_array['year']['zodiac']+ ''+
                    						'</td>'+
                    					'<td class="tt_ngay_1">&nbsp;</td>'+
                				'</tr>'+
            				'</tbody>'+
            			'</table>'+
        		'</div>'+
    	'</div>';
    	document.getElementById('cunghoangdao').innerHTML= result;
    	oclock();
}
function oclock() {
    	var timer = new Date();
    	var hour = timer.getHours();
    	var minute = timer.getMinutes();
    	var second = timer.getSeconds();
    	if (hour < 10) {
        		hour = '0' + hour;
    	}
    	if (minute < 10) {
        		minute = '0' + minute;
    	}
   	if (second < 10) {
        		second = '0' + second;
    	}
    	document.getElementById('oclock').innerHTML = hour + ':' + minute + ':' + second;
}